#include <iostream>
#include <cmath>
using namespace std;

int factorial(int i);

int main() {
	setlocale(LC_ALL, "rus");
	double x1, x2;
	double eps1 = 0.1;
	double eps2 = 0.000001;
	int count1 = 0;
	int count2 = 0;
	double rezx1;
	double rezx2;
	double xn;
	double xk;
	double xd;
	int sw = -1;
	float a, a_rez, E;
	int i = 0;
	float a_lim;
	float y, y_min = NULL, n;
	float b = 1;
	float  rez, a_next, b_next;
	float x, eps, x_rez;

	cout << "1) Задание 1\n2) Задание 2\n3) Задание 3\n4) Задание 4\n5) Задание 5\n0) Выход\n";
	cin >> sw;

	switch (sw)
	{
	case 1:
		cout << "Введите начальное значение x: " << endl;
		cin >> xn;
		cout << "Введите конечное значение x : " << endl;
		cin >> xk;
		cout << "Введите шаг: " << endl;
		cin >> xd;

		printf("-------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
		printf("| Значение x | Сравниваемое значение |#| Точность eps1 | Значение функции f1 | Количество итераций |#| Точность eps2 | Значение функции f2 | Количество итераций |#|\n");
		printf("-------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");



		for (xn; xn <= xk; xn += xd) {

			count1 = 0;
			x1 = 1;
			rezx1 = 1;
			count2 = 0;
			x2 = 1;
			rezx2 = 1;

			for (;;) {
				x1 = (-xn / (count1 + 1)) * ((pow(-1, count1) * pow(xn, count1)) / (factorial(count1)));
				rezx1 += x1;
				count1++;
				if (fabs(exp(-xn) - rezx1) <= eps1) break;
			}

			for (;;) {
				x2 = (-xn / (count2 + 1)) * ((pow(-1, count2) * pow(xn, count2)) / (factorial(count2)));
				rezx2 += x2;
				count2++;
				if (fabs(exp(-xn) - rezx2) <= eps2) break;
			}
			printf("|%12f|%23f|#|%15f|%21f|%21d|#|%15f|%21f|%21d|#|\n", xn, exp(-xn), eps1, rezx1, count1, eps2, rezx2, count2);
			printf("-------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");

		}
		break;

	case 2:
		

		cout << "Введите число" << endl;
		cin >> a;
		cout << "Введите точность" << endl;
		cin >> E;
		a_lim = a / 3.f;
		a_rez = powf(a, 1.f / 3.f);
		printf("_______________________________________________________________________________________________________________\n");
		printf("|  Число  | Точность | Функция pow(a, 1/3) | Предел последовательности | Номер итерации | Разность результатов|\n");
		printf("_______________________________________________________________________________________________________________\n");

		do
		{
			printf("|%9f|%10f|%21f|%27f|%16d|%21f|\n", a, E, a_rez, a_lim, i + 1, fabs(a_rez - a_lim));
			printf("--------------------------------------------------------------------------------------------------------------\n");
			a_lim = (2.f / 3.f) * (a_lim + a / (2.f * a_lim * a_lim));
			i++;
		} while (fabs(a_rez - a_lim) > E);

		cout << a_lim << "  " << a_rez << " при " << i << " - итераций" << endl;
		break;

	case 3:
		cout << "Введите число n" << endl;
		cin >> n;

		printf("______________________________________________________\n");
		printf("| Номер итерации | Значение у | Минимальное значение |\n");
		printf("______________________________________________________\n");

		for (int k = 1; k <= n; k++)
		{
			y = k * k * k * (sinf(n + k / n));
			if (y < y_min || y_min == NULL) y_min = y;
			printf("|%16d|%12f|%22f|\n", k, y, y_min);
			printf("------------------------------------------------------\n");
		}
		cout << "Наименьшее число = " << y_min << endl;
		break;

	case 4:
		a = 1;
		rez = a * b;

		cout << "Введите число n" << endl;
		cin >> n;

		printf("| Номер итерации | Значение a | Значение b |  Результат  |\n");
		printf("----------------------------------------------------------\n");
		printf("|%16d|%12f|%12f|%13f|\n", 1, a, b, rez);
		printf("----------------------------------------------------------\n");

		for (int k = 2; k <= n; k++)
		{
			a_next = 1.f / 2.f * (sqrt(b) + a / 2.f);
			b_next = 2.f * a * a + b;

			printf("|%16d|%12f|%12f|%13f|\n", k, a_next, b_next, rez + b_next * a_next);
			printf("----------------------------------------------------------\n");
			a = a_next;
			b = b_next;

			rez += a * b;
		}
		cout << "Результат = " << rez << endl;
		break;
		
	case 5:
		i = 0;

		cout << "Введите точность" << endl;
		cin >> eps;

		printf("---------------------------------------------------------------------------\n");
		printf("| Точность | Сравниваемое значение | Полученное значение | Номер итерации |\n");
		printf("---------------------------------------------------------------------------\n");
		do
		{
			x = 1 / pow(2, i);
			x_rez = sinf(x) / x;
			i++;
			printf("|%10f|%23f|%21f|%16d|\n", eps, 1, x_rez, i - 1);
			printf("---------------------------------------------------------------------------\n");
		} while (!(x_rez >= 1 - eps && x_rez <= 1 + eps));

		cout << "Результат = " << x_rez << endl;
 
		x_rez = 0, x = 1;
		i = 1;

		cout << "Введите точность" << endl;
		cin >> eps;


		printf("---------------------------------------------------------------------------\n");
		printf("| Точность | Сравниваемое значение | Полученное значение | Номер итерации |\n");
		printf("---------------------------------------------------------------------------\n");
		do
		{
			x = 1.f + 1.f / i;
			x_rez = powf(x, i);
			i++;
			printf("|%10f|%23f|%21f|%16d|\n", eps, exp(1.0), x_rez, i - 1);
			printf("---------------------------------------------------------------------------\n");
		} while (!(x_rez >= exp(1.0) - eps && x_rez <= exp(1.0) + eps));

		cout << "Результат = " << x_rez << endl;
		break;

	case 0:
		exit;
	default:
		cout << "Ошибка! Неверное значение!" << endl;
		break;
	}
}

int factorial(int i)
{
	if (i == 0) return 1;
	else return i * factorial(i - 1);
}
